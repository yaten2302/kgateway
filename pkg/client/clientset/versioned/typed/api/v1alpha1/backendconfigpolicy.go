// Code generated by client-gen. DO NOT EDIT.

package v1alpha1

import (
	context "context"

	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"

	apiv1alpha1 "github.com/kgateway-dev/kgateway/v2/api/v1alpha1"
	scheme "github.com/kgateway-dev/kgateway/v2/pkg/client/clientset/versioned/scheme"
)

// BackendConfigPoliciesGetter has a method to return a BackendConfigPolicyInterface.
// A group's client should implement this interface.
type BackendConfigPoliciesGetter interface {
	BackendConfigPolicies(namespace string) BackendConfigPolicyInterface
}

// BackendConfigPolicyInterface has methods to work with BackendConfigPolicy resources.
type BackendConfigPolicyInterface interface {
	Create(ctx context.Context, backendConfigPolicy *apiv1alpha1.BackendConfigPolicy, opts v1.CreateOptions) (*apiv1alpha1.BackendConfigPolicy, error)
	Update(ctx context.Context, backendConfigPolicy *apiv1alpha1.BackendConfigPolicy, opts v1.UpdateOptions) (*apiv1alpha1.BackendConfigPolicy, error)
	// Add a +genclient:noStatus comment above the type to avoid generating UpdateStatus().
	UpdateStatus(ctx context.Context, backendConfigPolicy *apiv1alpha1.BackendConfigPolicy, opts v1.UpdateOptions) (*apiv1alpha1.BackendConfigPolicy, error)
	Delete(ctx context.Context, name string, opts v1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error
	Get(ctx context.Context, name string, opts v1.GetOptions) (*apiv1alpha1.BackendConfigPolicy, error)
	List(ctx context.Context, opts v1.ListOptions) (*apiv1alpha1.BackendConfigPolicyList, error)
	Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts v1.PatchOptions, subresources ...string) (result *apiv1alpha1.BackendConfigPolicy, err error)
	BackendConfigPolicyExpansion
}

// backendConfigPolicies implements BackendConfigPolicyInterface
type backendConfigPolicies struct {
	*gentype.ClientWithList[*apiv1alpha1.BackendConfigPolicy, *apiv1alpha1.BackendConfigPolicyList]
}

// newBackendConfigPolicies returns a BackendConfigPolicies
func newBackendConfigPolicies(c *GatewayV1alpha1Client, namespace string) *backendConfigPolicies {
	return &backendConfigPolicies{
		gentype.NewClientWithList[*apiv1alpha1.BackendConfigPolicy, *apiv1alpha1.BackendConfigPolicyList](
			"backendconfigpolicies",
			c.RESTClient(),
			scheme.ParameterCodec,
			namespace,
			func() *apiv1alpha1.BackendConfigPolicy { return &apiv1alpha1.BackendConfigPolicy{} },
			func() *apiv1alpha1.BackendConfigPolicyList { return &apiv1alpha1.BackendConfigPolicyList{} },
		),
	}
}
