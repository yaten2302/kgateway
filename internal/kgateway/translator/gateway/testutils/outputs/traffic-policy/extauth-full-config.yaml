Clusters:
- connectTimeout: 5s
  edsClusterConfig:
    edsConfig:
      ads: {}
      resourceApiVersion: V3
  ignoreHealthOnHostRemoval: true
  metadata: {}
  name: kube_infra_example-svc_80
  type: EDS
- connectTimeout: 5s
  edsClusterConfig:
    edsConfig:
      ads: {}
      resourceApiVersion: V3
  ignoreHealthOnHostRemoval: true
  metadata: {}
  name: kube_infra_ext-authz_9000
  type: EDS
  typedExtensionProtocolOptions:
    envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
      '@type': type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
      explicitHttpConfig:
        http2ProtocolOptions: {}
- connectTimeout: 5s
  metadata: {}
  name: test-backend-plugin_default_example-svc_80
Listeners:
- address:
    socketAddress:
      address: '::'
      ipv4Compat: true
      portValue: 80
  filterChains:
  - filters:
    - name: envoy.filters.network.http_connection_manager
      typedConfig:
        '@type': type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
        httpFilters:
        - disabled: true
          name: global_disable/ext_auth
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.filters.http.set_metadata.v3.Config
            metadata:
            - metadataNamespace: dev.kgateway.disable_ext_auth
              value:
                disable: true
        - disabled: true
          name: ext_auth/infra/default-extauth
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
            filterEnabledMetadata:
              filter: dev.kgateway.disable_ext_auth
              invert: true
              path:
              - key: disable
              value:
                boolMatch: true
            grpcService:
              envoyGrpc:
                clusterName: kube_infra_ext-authz_9000
            statusOnError:
              code: Forbidden
        - disabled: true
          name: ext_auth/infra/full-extauth
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
            clearRouteCache: true
            failureModeAllow: true
            filterEnabledMetadata:
              filter: dev.kgateway.disable_ext_auth
              invert: true
              path:
              - key: disable
              value:
                boolMatch: true
            grpcService:
              envoyGrpc:
                clusterName: kube_infra_ext-authz_9000
              retryPolicy:
                numRetries: 3
                retryBackOff:
                  baseInterval: 0.050s
                  maxInterval: 0.200s
              timeout: 0.200s
            statPrefix: my_prefix
            statusOnError:
              code: BadRequest
            withRequestBody:
              allowPartialMessage: true
              maxRequestBytes: 420000
              packAsBytes: true
        - name: envoy.filters.http.router
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
        mergeSlashes: true
        normalizePath: true
        rds:
          configSource:
            ads: {}
            resourceApiVersion: V3
          routeConfigName: listener~80
        statPrefix: http
        useRemoteAddress: true
    name: listener~80
  name: listener~80
Routes:
- ignorePortInHostMatching: true
  name: listener~80
  virtualHosts:
  - domains:
    - example.com
    name: listener~80~example_com
    routes:
    - match:
        pathSeparatedPrefix: /example-route-2
      metadata:
        filterMetadata:
          merge.TrafficPolicy.gateway.kgateway.dev:
            extAuth:
            - gateway.kgateway.dev/TrafficPolicy/infra/extauth-for-http-route-2
      name: listener~80~example_com-route-0-httproute-example-route-2-infra-0-0-matcher-0
      route:
        cluster: kube_infra_example-svc_80
        clusterNotFoundResponseCode: INTERNAL_SERVER_ERROR
      typedPerFilterConfig:
        ext_auth/infra/default-extauth:
          '@type': type.googleapis.com/envoy.config.route.v3.FilterConfig
          config: {}
    - match:
        pathSeparatedPrefix: /example-route
      metadata:
        filterMetadata:
          merge.TrafficPolicy.gateway.kgateway.dev:
            extAuth:
            - gateway.kgateway.dev/TrafficPolicy/infra/extauth-for-http-route
      name: listener~80~example_com-route-1-httproute-example-route-infra-0-0-matcher-0
      route:
        cluster: kube_infra_example-svc_80
        clusterNotFoundResponseCode: INTERNAL_SERVER_ERROR
      typedPerFilterConfig:
        ext_auth/infra/full-extauth:
          '@type': type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
          checkSettings:
            contextExtensions:
              my-key: my-val
            withRequestBody:
              maxRequestBytes: 100000
Statuses:
  gateways:
    infra/example-gateway:
      conditions:
      - lastTransitionTime: null
        message: ""
        reason: ListenerSetsNotAllowed
        status: Unknown
        type: AttachedListenerSets
      - lastTransitionTime: null
        message: Successfully accepted Gateway
        reason: Accepted
        status: "True"
        type: Accepted
      - lastTransitionTime: null
        message: Successfully programmed Gateway
        reason: Programmed
        status: "True"
        type: Programmed
      listeners:
      - attachedRoutes: 2
        conditions:
        - lastTransitionTime: null
          message: Successfully accepted Listener
          reason: Accepted
          status: "True"
          type: Accepted
        - lastTransitionTime: null
          message: Successfully verified that Listener has no conflicts
          reason: NoConflicts
          status: "False"
          type: Conflicted
        - lastTransitionTime: null
          message: Successfully resolved all references
          reason: ResolvedRefs
          status: "True"
          type: ResolvedRefs
        - lastTransitionTime: null
          message: Successfully programmed Listener
          reason: Programmed
          status: "True"
          type: Programmed
        name: http1
        supportedKinds:
        - group: gateway.networking.k8s.io
          kind: HTTPRoute
        - group: gateway.networking.k8s.io
          kind: GRPCRoute
  httpRoutes:
    infra/example-route:
      parents:
      - conditions:
        - lastTransitionTime: null
          message: Successfully accepted Route
          reason: Accepted
          status: "True"
          type: Accepted
        - lastTransitionTime: null
          message: Successfully resolved all references
          reason: ResolvedRefs
          status: "True"
          type: ResolvedRefs
        controllerName: kgateway
        parentRef:
          group: ""
          kind: ""
          name: example-gateway
    infra/example-route-2:
      parents:
      - conditions:
        - lastTransitionTime: null
          message: Successfully accepted Route
          reason: Accepted
          status: "True"
          type: Accepted
        - lastTransitionTime: null
          message: Successfully resolved all references
          reason: ResolvedRefs
          status: "True"
          type: ResolvedRefs
        controllerName: kgateway
        parentRef:
          group: ""
          kind: ""
          name: example-gateway
  policies:
    TrafficPolicy/infra/extauth-for-http-route:
      ancestors:
      - ancestorRef:
          group: gateway.networking.k8s.io
          kind: Gateway
          name: example-gateway
          namespace: infra
        conditions:
        - lastTransitionTime: null
          message: Policy accepted
          reason: Valid
          status: "True"
          type: Accepted
        - lastTransitionTime: null
          message: Attached to all targets
          reason: Attached
          status: "True"
          type: Attached
        controllerName: kgateway.dev/kgateway
    TrafficPolicy/infra/extauth-for-http-route-2:
      ancestors:
      - ancestorRef:
          group: gateway.networking.k8s.io
          kind: Gateway
          name: example-gateway
          namespace: infra
        conditions:
        - lastTransitionTime: null
          message: Policy accepted
          reason: Valid
          status: "True"
          type: Accepted
        - lastTransitionTime: null
          message: Attached to all targets
          reason: Attached
          status: "True"
          type: Attached
        controllerName: kgateway.dev/kgateway
