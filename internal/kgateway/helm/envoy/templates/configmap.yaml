{{- $gateway := .Values.gateway }}
{{- $statsConfig := $gateway.stats }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "kgateway.gateway.fullname" . }}
  labels:
    {{- include "kgateway.gateway.constLabels" . | nindent 4 }}
    {{- include "kgateway.gateway.labels" . | nindent 4 }}
data:
{{- if and $gateway.xds.tls $gateway.xds.tls.enabled }}
  ca.crt: |
{{ $gateway.xds.tls.caCert | indent 4 }}
{{- end }}
  envoy.yaml: |
    admin:
      address:
        socket_address: { address: 127.0.0.1, port_value: 19000 }
    layered_runtime:
      layers:
      - name: static_layer
        static_layer:
          envoy.restart_features.use_eds_cache_for_ads: true
      - name: admin_layer
        admin_layer: {}
    node:
      cluster: {{ include "kgateway.gateway.fullname" . }}.{{ .Release.Namespace }}
      metadata:
        role: kgateway-kube-gateway-api~{{ $gateway.gatewayNamespace }}~{{ $gateway.gatewayName | default (include "kgateway.gateway.fullname" .) }}
    static_resources:
      {{- if and $gateway.xds.tls $gateway.xds.tls.enabled }}
      secrets:
        - name: validation_context_sds
          validation_context:
            trusted_ca:
              filename: /etc/envoy/ca.crt
            watched_directory:
              path: /etc/envoy
      {{- end }}
      listeners:
      - name: readiness_listener
        address:
          socket_address: { address: 0.0.0.0, port_value: 8082 }
        filter_chains:
          - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                stat_prefix: ingress_http
                codec_type: AUTO
                route_config:
                  name: main_route
                  virtual_hosts:
                    - name: local_service
                      domains: ["*"]
                      routes:
                        - match:
                            path: "/ready"
                            headers:
                              - name: ":method"
                                string_match:
                                  exact: GET
                          route:
                            cluster: admin_port_cluster
                http_filters:
{{- if $gateway.readinessProbe }}
                  - name: envoy.filters.http.health_check
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.health_check.v3.HealthCheck
                      pass_through_mode: false
                      headers:
                      - name: ":path"
                        string_match:
                          exact: "/envoy-hc"
{{- end }}{{/*if $gateway.readinessProbe*/}}
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
{{- if $statsConfig.enabled }}
      - name: prometheus_listener
        address:
          socket_address:
            address: 0.0.0.0
            port_value: 9091
        filter_chains:
          - filters:
              - name: envoy.filters.network.http_connection_manager
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                  codec_type: AUTO
                  stat_prefix: prometheus
                  route_config:
                    name: prometheus_route
                    virtual_hosts:
                      - name: prometheus_host
                        domains:
                          - "*"
                        routes:
                          - match:
                              path: "/ready"
                              headers:
                                - name: ":method"
                                  string_match:
                                    exact: GET
                            route:
                              cluster: admin_port_cluster
                          - match:
                              prefix: "/metrics"
                              headers:
                                - name: ":method"
                                  string_match:
                                    exact: GET
                            route:
                              prefix_rewrite: {{ $statsConfig.routePrefixRewrite }}
                              cluster: admin_port_cluster
                        {{- if $statsConfig.enableStatsRoute}}
                          - match:
                              prefix: "/stats"
                              headers:
                                - name: ":method"
                                  string_match:
                                    exact: GET
                            route:
                              prefix_rewrite: {{ $statsConfig.statsPrefixRewrite }}
                              cluster: admin_port_cluster
                        {{- end }}
                  http_filters:
                    - name: envoy.filters.http.router
                      typed_config:
                        "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
{{- end }}{{/* if $gateway.stats.enabled */}}
      clusters:
        - name: xds_cluster
          alt_stat_name: xds_cluster
          connect_timeout: 5.000s
          load_assignment:
            cluster_name: xds_cluster
            endpoints:
            - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: {{ $gateway.xds.host }}
                      port_value: {{ $gateway.xds.port }}
          {{- if and $gateway.xds.tls $gateway.xds.tls.enabled }}
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
              common_tls_context:
                validation_context_sds_secret_config:
                  name: validation_context_sds
          {{- end }}
          typed_extension_protocol_options:
            envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
              "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
              explicit_http_config:
                http2_protocol_options: {}
              http_filters:
              - name: transform
                typed_config:
                  "@type": type.googleapis.com/envoy.api.v2.filter.http.FilterTransformations
                  transformations:
                  - match:
                      prefix: "/"
                    route_transformations:
                      request_transformation:
                        transformation_template:
                          headers:
                            authorization: {"text": 'Bearer {{ "{{ \"{{ trim(data_source(\\\"token\\\")) -}}\" }}" }}'}
                          passthrough: {}
                          data_sources:
                            token:
                              filename: "/var/run/secrets/tokens/xds-token"
                              watched_directory:
                                path: "/var/run/secrets/tokens"
              - name: envoy.filters.http.upstream_codec
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.upstream_codec.v3.UpstreamCodec
          upstream_connection_options:
            tcp_keepalive:
              keepalive_time: 10
          type: STRICT_DNS
          respect_dns_ttl: true
        - name: admin_port_cluster
          connect_timeout: 5.000s
          type: STATIC
          lb_policy: ROUND_ROBIN
          load_assignment:
            cluster_name: admin_port_cluster
            endpoints:
            - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 127.0.0.1
                      port_value: 19000
        {{- if $gateway.istio.enabled }}
        - name: gateway_proxy_sds
          connect_timeout: 0.25s
          http2_protocol_options: {}
          load_assignment:
            cluster_name: gateway_proxy_sds
            endpoints:
              - lb_endpoints:
                - endpoint:
                    address:
                      socket_address:
                        address: 127.0.0.1
                        port_value: 8234
        {{- end }}{{/* if $gateway.istio.enabled */}}
    dynamic_resources:
      ads_config:
        transport_api_version: V3
        api_type: GRPC
        rate_limit_settings: {}
        grpc_services:
        - envoy_grpc:
            cluster_name: xds_cluster
      cds_config:
        resource_api_version: V3
        ads: {}
      lds_config:
        resource_api_version: V3
        ads: {}
