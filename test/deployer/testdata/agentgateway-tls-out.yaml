---
# Source: kgateway-proxy/templates/gateway/agent-gateway-deployment.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: gw
  annotations:
    {}
  labels:
    app.kubernetes.io/instance: gw
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: gw
    app.kubernetes.io/version: 1.0.0-ci1
    gateway.networking.k8s.io/gateway-class-name: agentgateway
    gateway.networking.k8s.io/gateway-name: gw
    helm.sh/chart: kgateway-proxy-1.0.0-ci1
    kgateway: kube-gateway
automountServiceAccountToken: false
---
# Source: kgateway-proxy/templates/gateway/agent-gateway-deployment.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: gw
  annotations:
    {}
  labels:
    app.kubernetes.io/instance: gw
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: gw
    app.kubernetes.io/version: 1.0.0-ci1
    gateway.networking.k8s.io/gateway-class-name: agentgateway
    gateway.networking.k8s.io/gateway-name: gw
    helm.sh/chart: kgateway-proxy-1.0.0-ci1
    kgateway: kube-gateway
data:
  config.yaml: |
    config: {}
---
# Source: kgateway-proxy/templates/gateway/agent-gateway-deployment.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: gw-xds-ca
  labels:
    kgateway: kube-gateway
    helm.sh/chart: kgateway-proxy-1.0.0-ci1
    app.kubernetes.io/name: gw
    app.kubernetes.io/instance: gw
    gateway.networking.k8s.io/gateway-name: gw
    app.kubernetes.io/version: "1.0.0-ci1"
    gateway.networking.k8s.io/gateway-class-name: agentgateway
    app.kubernetes.io/managed-by: Helm
data:
  ca.crt: |
    -----BEGIN CERTIFICATE-----
    MIICljCCAX4CCQCKSGhvPtMNGzANBgkqhkiG9w0BAQsFADANMQswCQYDVQQGEwJV
    UzAeFw0yNDA3MDEwMDAwMDBaFw0yNTA3MDEwMDAwMDBaMA0xCzAJBgNVBAYTAlVT
    MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA1234567890ABCDEFGHIj
    klmnopqrstuvwxyz1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ab
    cdefghijklmnopqrstuvwxyz1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ123456
    7890abcdefghijklmnopqrstuvwxyz1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ
    1234567890abcdefghijklmnopqrstuvwxyz1234567890ABCDEFGHIJKLMNOPQRSTU
    VWXYZ1234567890abcdefghijklmnopqrstuvwxyz1234567890ABCDEFGHIJKLMNO
    PQRSTUVWXYZ1234567890abcdefghijklmnopqrstuvwxyz1234567890ABCDEFGHI
    JKLMNOPQRSTUVWXYZ1234567890abcdefghijklmnopqrstuvwxyz1234567890ABC
    DEFGHIJKLMNOPQRSTUVWXYZ1234567890abcdefghijklmnopqrstuvwxyz123456
    wIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQBtestcertdata
    -----END CERTIFICATE-----
---
# Source: kgateway-proxy/templates/gateway/agent-gateway-deployment.yaml
apiVersion: v1
kind: Service
metadata:
  name: gw
  annotations:
    {}
  labels:
    app.kubernetes.io/instance: gw
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: gw
    app.kubernetes.io/version: 1.0.0-ci1
    gateway.networking.k8s.io/gateway-class-name: agentgateway
    gateway.networking.k8s.io/gateway-name: gw
    helm.sh/chart: kgateway-proxy-1.0.0-ci1
    kgateway: kube-gateway
spec:
  type: LoadBalancer
  ports:
    - name: listener-8080
      protocol: TCP
      targetPort: 8080
      port: 8080
  selector:
    app.kubernetes.io/name: gw
    app.kubernetes.io/instance: gw
    gateway.networking.k8s.io/gateway-name: gw
---
# Source: kgateway-proxy/templates/gateway/agent-gateway-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gw
  annotations:
  labels:
    app.kubernetes.io/instance: gw
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: gw
    app.kubernetes.io/version: 1.0.0-ci1
    gateway.networking.k8s.io/gateway-class-name: agentgateway
    gateway.networking.k8s.io/gateway-name: gw
    helm.sh/chart: kgateway-proxy-1.0.0-ci1
    kgateway: kube-gateway
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: gw
      app.kubernetes.io/name: gw
      gateway.networking.k8s.io/gateway-name: gw
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "15020"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/instance: gw
        app.kubernetes.io/name: gw
        gateway.networking.k8s.io/gateway-class-name: agentgateway
        gateway.networking.k8s.io/gateway-name: gw
    spec:
      serviceAccountName: gw
      securityContext:
        sysctls:
        - name: net.ipv4.ip_unprivileged_port_start
          value: "0"
      containers:
        - name: agent-gateway
          image: "ghcr.io/agentgateway/agentgateway:0.10.1"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 10101
          startupProbe:
            failureThreshold: 60
            httpGet:
              path: /healthz/ready
              port: 15021
            periodSeconds: 1
            successThreshold: 1
            timeoutSeconds: 2
          readinessProbe:
            httpGet:
              path: /healthz/ready
              port: 15021
            initialDelaySeconds: 5
            periodSeconds: 10
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - wget --post-data "" -O /dev/null 127.0.0.1:15000/quitquitquit; sleep 10
          ports:
          - containerPort: 15020
            name: metrics
            protocol: TCP
          args:
            - -f
            - /config/config.yaml
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: GW_NAME
              value: gw
            - name: RUST_BACKTRACE
              value: "1"
            - name: RUST_LOG
              value: info
            - name: XDS_ADDRESS
              value: "https://xds.cluster.local:9978"
            - name: XDS_ROOT_CA
              value: "/etc/xds-tls/ca.crt"
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: GATEWAY
              value: gw
          volumeMounts:
            - name: config-volume
              mountPath: /config
            # Make /tmp writeable, needed for pprof
            - name: tmp
              mountPath: /tmp
            - name: xds-token
              mountPath: /var/run/secrets/xds-tokens
              readOnly: true
            - name: xds-ca
              mountPath: /etc/xds-tls
              readOnly: true
      volumes:
        - name: config-volume
          configMap:
            name: gw
        - name: xds-token
          projected:
            sources:
            - serviceAccountToken:
                audience: kgateway
                expirationSeconds: 43200
                path: xds-token
        - name: tmp
          emptyDir: {}
        - name: xds-ca
          configMap:
            name: gw-xds-ca
            items:
            - key: ca.crt
              path: ca.crt
      terminationGracePeriodSeconds: 60
